
SQL> CREATE OR REPLACE TRIGGER display_salary_changes
  2      BEFORE DELETE OR INSERT OR UPDATE ON empl
  3      FOR EACH ROW
  4      WHEN (NEW.EMP_ID > 0)
  5      DECLARE
  6      sal_diff number;
  7      BEGIN
  8      sal_diff := :NEW.salary - :OLD.salary;
  9    dbms_output.put_line('Old salary: ' || :OLD.salary);
 10     dbms_output.put_line('New salary: ' || :NEW.salary);
 11     dbms_output.put_line('Salary difference: ' || sal_diff);
 12     END;
 13     /

Trigger created.

SQL> set serverout on
SQL> DECLARE
  2      total_rows number(2);
  3      BEGIN
  4      UPDATE empl
  5      SET salary = salary + 5000;
  6      IF sql%notfound THEN
  7      dbms_output.put_line('no customers updated');
  8      ELSIF sql%found THEN
  9      total_rows := sql%rowcount;
 10     dbms_output.put_line( total_rows || ' customers updated ');
 11     END IF;
 12
 13     END;
 14     /
Old salary: 100
New salary: 5100
Salary difference: 5000
Old salary: 200
New salary: 5200
Salary difference: 5000
Old salary: 300
New salary: 5300
Salary difference: 5000
3 customers updated

PL/SQL procedure successfully completed.

SQL>